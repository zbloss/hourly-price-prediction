name: deploy to lambda
on:
  push:
    branches:
      - main

jobs:

  deploy_lambda:
    name: build the lambda function zip file
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Assume IAM Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 900
          role-session-name: GithubActionsSession

      - name: AWS ECR Auth
        run: |
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 193172378049.dkr.ecr.us-east-2.amazonaws.com
          docker build -t asset-trader .
          docker tag  asset-trader:latest 193172378049.dkr.ecr.us-east-2.amazonaws.com/asset-trader:latest
          docker push 193172378049.dkr.ecr.us-east-2.amazonaws.com/asset-trader:latest

      - name: Update Lambda Environment Variables
        run: |
          aws lambda update-function-configuration \
            --function-name asset-trader \
            --timeout 120 \
            --role ${{ secrets.AWS_ROLE_TO_ASSUME }} \
            --environment "Variables={ASSET=BTC-USD,API_SECRET=${{ secrets.COINBASE_API_SECRET }},API_KEY=${{ secrets.COINBASE_API_KEY }},PASSPHRASE=${{ secrets.PASSPHRASE }},USE_SANDBOX=True,S3_BUCKET=hourly-price-prediction,MODEL_NAME=linearregressor-20210807T000802,REGION_NAME=us-east-2}"
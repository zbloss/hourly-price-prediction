name: deploy to lambda
on:
  push:
    branches:
      - main

jobs:
  
  # run_tests:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.8, 3.9]

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install flake8 pytest pytest-cov
  #         if [ -f lambda_requirements.txt ]; then pip install -r lambda_requirements.txt; fi
  #     - name: Test with pytest
  #       run: |
  #         pytest --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

  #     - name: Publish Test Report
  #       uses: mikepenz/action-junit-report@v2
  #       with:
  #         report_paths: 'junit/*.xml'


  build_zip_file:
    name: build the lambda function zip file
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build AWS Lambda Zip File
        run: make build_zip
      - name: Uploading Zip
        uses: actions/upload-artifact@v2
        with:
          name: lambda_zip
          path: lambda-package.zip

  deploy:
    needs: build_zip_file
    name: deploy lambda function
    runs-on: ubuntu-latest
    steps:
    - name: Downloading Zip
      uses: actions/download-artifact@v2
      with:
        name: lambda_zip
    - name: AWS Lambda Deploy
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: ${{ secrets.AWS_REGION }}
        function_name: eth-trader
        zip_file: lambda-package.zip
        dry_run: false
        environment: ASSET=${{ secrets.ASSET }},API_SECRET=${{ secrets.COINBASE_API_SECRET }},API_KEY=${{ secrets.COINBASE_API_KEY }},PASSPHRASE=${{ secrets.PASSPHRASE }},USE_SANDBOX=${{ secrets.USE_SANDBOX }},S3_BUCKET=${{ secrets.S3_BUCKET }},MODEL_NAME=${{ secrets.MODEL_NAME }},AWS_REGION=${{ secrets.AWS_REGION }}

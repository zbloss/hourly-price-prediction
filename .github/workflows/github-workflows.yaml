name: deploy to lambda
on:
  push:
    branches:
      - main

jobs:
  
  # run_tests:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.8, 3.9]

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install flake8 pytest pytest-cov
  #         if [ -f lambda_requirements.txt ]; then pip install -r lambda_requirements.txt; fi
  #     - name: Test with pytest
  #       run: |
  #         pytest --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

  #     - name: Publish Test Report
  #       uses: mikepenz/action-junit-report@v2
  #       with:
  #         report_paths: 'junit/*.xml'


  build_zip_file:
    name: build the lambda function zip file
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Assume IAM Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 900
          role-session-name: GithubActionsSession

      - name: Build AWS Lambda Zip File
        run: make build_zip

      - name: Upload Zip to S3
        run: make upload_lambda_zip_to_s3

      - name: Update Lambda Function Code
        run: make deploy_lambda

      - name: Update Lambda Environment Variables
        run: |
          aws lambda update-function-configuration \
            --function-name eth-trader \
            --timeout 120 \
            --memory-size 128 \
            --role ${{ secrets.AWS_ROLE_TO_ASSUME }} \
            --environment "Variables={ASSET=BTC-USD,API_SECRET=${{ secrets.COINBASE_API_SECRET }},API_KEY=${{ secrets.COINBASE_API_KEY }},PASSPHRASE=${{ secrets.PASSPHRASE }},USE_SANDBOX=True,S3_BUCKET=hourly-price-prediction,MODEL_NAME=linearregressor-20210802T232219,AWS_REGION=us-east-2}"